{"version":3,"sources":["components/Stopwatch.jsx","components/Settings.jsx","components/App.jsx","index.js"],"names":["end","pauseTime","intFn","currentTime","pause","timerNext","timerRun","timers","timerState","count","Stopwatch","props","useState","formatTime","settings","work","timer","setTimer","startTimer","Promise","resolve","reject","console","log","alert","Date","now","setInterval","pauseHandler","mseconds","minutes","Math","floor","seconds","ceil","timeToString","clearInterval","a","sessions","longBreakInterval","minutePadding","secondPadding","onClick","Settings","setSessions","setWork","shortBreak","setShortBreak","setLongBreakInterval","longBreak","setLongBreak","onSubmit","e","changeSettings","className","htmlFor","onChange","event","value","target","type","id","placeholder","name","App","localStorage","getItem","setItem","JSON","stringify","parse","workv","shortBreakv","longBreakv","sessionsv","longBreakIntervalv","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63efab74.chunk.js","sourcesContent":["import React, {\r\n    useState\r\n} from \"react\";\r\n\r\n    let end = 0;\r\n    let pauseTime = 0;\r\n    let intFn = () => {};\r\n    let currentTime = 0;\r\n    let pause = false;\r\n    let timerNext = false;\r\n    let timerRun = false;\r\n    let timers = {\r\n        work: 'work',\r\n        shortBreak: 'shortBreak',\r\n        longBreak: 'longBreak'\r\n    };\r\n    let timerState = 'work';\r\n    let count = 0;\r\n\r\nfunction Stopwatch(props) {\r\n    const [timer, setTimer] = useState(formatTime(props.settings.work));// formatTime(props.settings['work'])\r\n\r\n    //add reject eventually!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    function startTimer() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n        console.log('Current timer mode: ' + timerState);\r\n        if (timerRun) {\r\n            alert(\"Timer is already running!\");\r\n            return;\r\n        }\r\n        currentTime = Date.now()  \r\n        if (!pause) {\r\n            end = Date.now() + props.settings[timerState] * 60000;\r\n        }else {\r\n            end = end + Date.now() - pauseTime;\r\n            pause = false;\r\n        }\r\n        intFn = setInterval(function () {\r\n            currentTime = Date.now()\r\n            if (timerNext) {\r\n                pauseHandler();\r\n                pauseTime = pauseTime - 1000; //without this, timer starts goes from 1:00 to 00:58 immediately, find a better fix\r\n                setTimer(formatTime(props.settings[timerState]));\r\n                timerNext = false;\r\n            } else if (end > currentTime) { // timer running\r\n                timerRun = true;\r\n                setTimer(timeToString(end - currentTime));\r\n                pause = false;\r\n            } else {\r\n                timerRun = false;\r\n                setTimer('00:00');\r\n                clearInterval(intFn);// stops interval\r\n                resolve();\r\n                pause = false;\r\n            }\r\n        }, 1000);\r\n    });\r\n    }\r\n\r\n    function pauseHandler() { //implement pause state for double clicking\r\n        if (pause) {\r\n            alert('Timer has already been paused!');\r\n            return;\r\n        }\r\n        console.log('Pause handler executed');\r\n        \r\n        clearInterval(intFn); //wipe out display\r\n        timerRun = false;\r\n        pause = true;\r\n        pauseTime = Date.now();\r\n    }\r\n\r\n    async function manageTimer() {\r\n        while(count < props.settings.sessions) {\r\n            if (timerState === 'work') {\r\n                await startTimer();\r\n                count++;\r\n                timerNext = true; \r\n            }\r\n            console.log('Session no.: '+ count);\r\n            \r\n            if (count === (props.settings.sessions)) {\r\n                setTimer('00:00');\r\n                alert('Well Done!!');\r\n                timerNext = false;\r\n                setTimer(formatTime(props.settings[timerState]));\r\n                count = 0;\r\n                break;\r\n            };\r\n            if (count % props.settings.longBreakInterval === 0) {\r\n                timerState = timers.longBreak;\r\n            } else {\r\n                timerState = timers.shortBreak;\r\n            }\r\n            await startTimer();\r\n            timerNext = true;\r\n            console.log('set to worka at  end');\r\n            \r\n            timerState = timers.work;\r\n        }\r\n    };\r\n\r\n    function timeToString(mseconds) { //from miliseconds\r\n        let minutes = Math.floor(mseconds / 60000);\r\n        let seconds = Math.ceil(mseconds % 60000 / 1000); \r\n        return formatTime(minutes, seconds);\r\n    }\r\n\r\n    function formatTime(minutes=0, seconds=0) {\r\n        let minutePadding = '';\r\n        let secondPadding = '';\r\n        if (minutes < 10) minutePadding = '0';\r\n        if (seconds < 10) secondPadding = '0';\r\n        return `${minutePadding}${minutes}:${secondPadding}${seconds}`;\r\n    }\r\n//onclick is taking it as an event handler??\r\n    return (\r\n        <div>\r\n            <h1>{timer}</h1>\r\n            <button onClick={manageTimer}>Start</button>\r\n            <button onClick={pauseHandler}>Pause</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Stopwatch;","import React, {\r\n    useState\r\n} from \"react\";\r\n\r\nfunction Settings(props) {\r\n    const [sessions, setSessions] = useState(props.settings.sessions);\r\n    const [work, setWork] = useState(props.settings.work);\r\n    const [shortBreak, setShortBreak] = useState(props.settings.shortBreak);\r\n    const [longBreakInterval, setLongBreakInterval] = useState(props.settings.longBreakInterval);\r\n    const [longBreak, setLongBreak] = useState(props.settings.longBreak);\r\n\r\n    function formSubmit(e) {\r\n        props.changeSettings(work, shortBreak, longBreak, sessions, longBreakInterval);\r\n    }\r\n\r\n    function sessionsChange(event) {\r\n        const {value} = event.target;\r\n        setSessions(value);\r\n    }\r\n\r\n    function workChange(event) {\r\n        const {value} = event.target;\r\n        setWork(value);\r\n    }\r\n\r\n    function shortBreakChange(event) {\r\n        const {value} = event.target;\r\n        setShortBreak(value);\r\n    }\r\n\r\n    function longBreakIntervalChange (event) {\r\n        const {value} = event.target;\r\n        setLongBreakInterval(value);\r\n    }\r\n\r\n    function longBreakChange(event) {\r\n        const {value} = event.target;\r\n        setLongBreak(value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={formSubmit}>\r\n                <div className='form-group'>\r\n                    <label htmlFor='numberOfSessions'>Number of work sessions</label>\r\n                    <input onChange = {sessionsChange} type='number' className='form-control' id='numberOfSessions' placeholder='Enter a wholenumber' name='sessions' value={sessions}></input>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='workSessionLength'>Length of each work session</label>\r\n                    <input onChange = {workChange} type='number' className='form-control' id='workSessionLength' placeholder='Enter a wholenumber' name='work' value={work}></input>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='shortBreakLength'>Length of each short break</label>\r\n                    <input onChange={shortBreakChange} type='number' className='form-control' id='shortBreakLength' placeholder='Enter a wholenumber' name='shortBreak' value={shortBreak}></input>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='longBreakInterval'>Number of work sessions to a long break</label>\r\n                    <input onChange={longBreakIntervalChange} type='number' className='form-control' id='longBreakInterval' placeholder='Enter a wholenumber' name='longBreakInterval' value={longBreakInterval}></input>\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label htmlFor='longBreakLength'>Length of each long break</label>\r\n                    <input onChange={longBreakChange} type='number' className='form-control' id='longBreakLength' placeholder='Enter a wholenumber' name='longBreak' value={longBreak}></input>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React, {\r\n    useState\r\n} from 'react';\r\nimport Stopwatch from './Stopwatch';\r\nimport Settings from './Settings';\r\n\r\nfunction App() {\r\n    let settings = {};\r\n\r\n    if(localStorage.getItem('settings') === null) { //store default settings in localStorage\r\n        settings = {\r\n            work: 25,\r\n            shortBreak: 5,\r\n            longBreak: 15,\r\n            sessions: 2,\r\n            longBreakInterval: 3\r\n        };\r\n        localStorage.setItem('settings', JSON.stringify(settings));\r\n    }\r\n\r\n    function changeSettings(workv, shortBreakv, longBreakv, sessionsv, longBreakIntervalv) { //change settings if any\r\n        settings.work = workv;\r\n        settings.shortBreak = shortBreakv;\r\n        settings.longBreak = longBreakv;\r\n        settings.sessions = sessionsv;\r\n        settings.longBreakInterval = longBreakIntervalv;\r\n        localStorage.setItem('settings', JSON.stringify(settings));\r\n        console.log('Settings changed');\r\n        \r\n        for (let key in settings) {\r\n            console.log(settings[key]);\r\n        }\r\n    }\r\n\r\n    settings = JSON.parse(localStorage.getItem('settings'));\r\n    //     settings = {\r\n    //     work: 0.07, // for debugging\r\n    //     shortBreak: 0.03,\r\n    //     longBreak: 0.2,\r\n    //     sessions: 3,\r\n    //     longBreakInterval: 3\r\n    // };\r\n\r\n    return ( \r\n        <div>\r\n            <Stopwatch settings = {settings}/>\r\n            <Settings changeSettings = {changeSettings} settings = {settings}/>\r\n        </div>\r\n        )\r\n\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}